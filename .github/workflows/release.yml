name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]"

jobs:
  
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - uses: actions/checkout@v2
      - name: Cache go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - name: Run go fmt
        if: runner.os != 'Windows'
        run: diff -u <(echo -n) <(gofmt -d -s .)
      - name: Run go vet
        run: go vet ./...
      - name: Run docker mongodb
        run: docker-compose -f docker-compose.test.yml up -d
      - name: Wait / Sleep
        uses: jakejarvis/wait-action@v0.1.0
        with:
          time: '20s'
      - name: Run go test
        run: go test -v -race -coverprofile coverage.txt -covermode atomic ./...
        env:
          PORT: 8080
          MONGODB_DATABASE: example
          MONGODB_URL: mongodb://root:password@localhost:27017
  
  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - uses: actions/checkout@v2
      - name: Cache go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build docker image
        run: ./script/ci/build_and_push.sh tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: go_example_api
